name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
      - main
  pull_request:
    branches:
      - '**'

jobs:

  test-build-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17 (Adoptium)
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          java-package: 'jdk'

      - name: Install dependencies
        run: |
          mvn install

      - name: Run unit tests
        run: |
          mvn test

      - name: Build Docker image
        run: |
          docker build -t dockerdys/springboot-app:main .

      - name: Build documentation
        run: |
          mvn javadoc:javadoc

  deploy:
    runs-on: ubuntu-latest
    needs: test-build-docs
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image to Docker Hub
        run: |
          docker build -t dockerdys/springboot-app:main .
          docker push dockerdys/springboot-app:main

      - name: Trigger Render Deploy
        run: |
          curl --request POST \
               --url https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
               --header 'accept: application/json' \
               --header 'content-type: application/json' \
               --header "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"

      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_ACCESS_TOKEN }}
        run: |

          netlify link --auth $NETLIFY_AUTH_TOKEN --site ${{ secrets.NETLIFY_SITE_ID }}

          netlify deploy --prod --dir=. --auth $NETLIFY_AUTH_TOKEN

  badge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add workflow status badge to README
        run: |
          echo "![CI/CD Status](https://img.shields.io/github/workflow/status/${{ github.repository }}/CI/CD%20Pipeline?label=CI%2FCD%20Status)" >> README.md
          git config --global user.name "Zaouich123"
          git config --global user.email "etienne.baillie@gmail.com"
          git remote set-url origin https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git
          git add README.md
          git commit -m "Update README with CI/CD status badge"
          git push origin main
